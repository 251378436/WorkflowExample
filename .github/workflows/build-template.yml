# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: build-template

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      merge:
        required: true
        type: boolean
    secrets:
      ACR_USERNAME:
        required: true
      ACR_PASSWORD:
        required: true

jobs:
  build:
    name: Run dotnet build for env ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Step 1 - Echo out a GitHub Actions Secret to the logs
      env:
        branchname: ${GITHUB_REF#refs/heads/}
        commit1: ${GITHUB_SHA}
        commit2: ${GITHUB_SHA::7}
        commit3: $(git rev-parse --short "$GITHUB_SHA")
        commit4: ${{ github.event.pull_request.head.sha }}
      run: |
        echo "The GitHub Action Secret will be masked: ${{env.commit1}}  / ${{env.commit2}} / ${{env.commit3}}  /  ${{ secrets.ACR_USERNAME }} / ${{ secrets.ACR_PASSWORD }} / ! ${{ vars.ACRENDPOINT }} !!"
        echo "/ ${{env.commit4}} / ${{env.branchname}}"
    - name: Test again
      if: ${{ inputs.merge == true }}
      run: dotnet test --no-build --verbosity normal

  docker1:
    name: Run docker1
    uses: ./.github/workflows/docker-build-template.yml
    needs: build
    with:
      environment: ${{ inputs.environment }}
      merge: ${{ inputs.merge }}
      imagename: ${{ vars.REPONAME }}
    secrets:
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    
  docker2:
    name: Run docker2
    uses: ./.github/workflows/docker-build-template.yml
    needs: build
    with:
      environment: ${{ inputs.environment }}
      merge: false
      imagename: ${{ vars.REPONAME }}
    secrets:
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    